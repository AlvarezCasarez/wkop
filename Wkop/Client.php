<?php

namespace Wkop;

use Wkop\Signer;

class Client
{
    /**
     * Array of rights.
     *
     * @var array
     */
    private $rights;

    /**
    * Application account key.
    *
    * @var string $appKey
    */
    private $appKey;

    /**
     * User key.
     * It is returned by server when singing in.
     *
     * @var string $userKey
     */
    private $userKey;

    /**
     * Secret key.
     *
     * @var string $secretKey
     */
    private $secretKey;

    /**
     * @var string
     */
    private $userLogin = null;

    /**
     * Key generated by user for specific application.
     *
     * @var string
     */
    private $userAccountKey = null;

    /**
     * Http client used by this class.
     *
     * @var \GuzzleHttp\Client $httpClient
     */
    private $httpClient;

    /**
     * Signer class.
     *
     * @var Signer $requester
     */
    private $requester;

    /**
     * @param $appKey
     * @param $secretKey
     * @param $httpClient
     */
    public function __construct($appKey, $secretKey, $httpClient)
    {
        $this->appKey = $appKey;
        $this->secretKey = $secretKey;

        $this->httpClient = $httpClient;
    }

    /**
     * @param Signer $requester
     */
    public function setRequester($requester)
    {
        $this->requester = $requester;
    }

    /**
     * @param $userLogin
     * @param $userAccountKey
     */
    public function setUserCredentials($userLogin, $userAccountKey)
    {
        $this->userLogin = $userLogin;
        $this->userAccountKey = $userAccountKey;
    }

    /**
     * Perform login action.
     * Return boolean representation of failure or success
     *
     * @return bool
     * @throws Exceptions\UrlMissingException
     */
    public function logIn()
    {
        if (is_null($this->userLogin) || is_null($this->userAccountKey)) {
            return false;
        }

        $url = 'http://a.wykop.pl/user/login/appkey,' . $this->appKey;
        $postData = [
            'login'         => $this->userLogin,
            'accountkey'    => $this->userAccountKey,
        ];

        $this->requester
            ->setUrl($url)
            ->setPostData($postData);

        $signingKey = $this->requester->getSigningKey();

        $response = $this->httpClient
            ->post(
                $url,
                [
                    'headers' => [
                        'apisign' => $signingKey,
                        ],
                    'body' => $postData
                ]
            );

        if (isset($response->json()['error'])) {
            $this->userKey = null;
            return false;
        }

        if (! isset($response->json()['userkey'])) {
            return false;
        }

        $this->userKey = $response->json()['userkey'];
        return true;
    }

    /**
     * @return bool
     */
    public function getLoginStatus()
    {
        return ! is_null($this->userKey);
    }
}
